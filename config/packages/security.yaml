security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    encoders:
        App\Entity\User: bcrypt
    providers:
        database_users:
            entity: { class: App\Entity\User, property: username }
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            user_checker: App\Security\UserChecker
            anonymous: true
            pattern: ^/

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            form_login:
                check_path: security_login
                login_path: security_login
                csrf_token_generator: security.csrf.token_manager
                default_target_path: micro_post_index
#                always_use_default_target_path: false
#                use_referer: true
#                failure_path:
#                username_parameter: _username
#                password_parameter: _password
#                username_parameter: _csrf_token

            logout:
                path: security_logout
                target: micro_post_index

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }

    role_hierarchy:
        ROLE_ADMIN: ROLE_USER